Beta 1:
  Added support for Ren'Py game engine's .rpa archives using unrpa
  Added support for Unreal Engine packages (.u, .uax, .upk) using Unreal Package Extractor (plugin)
  Added support for Telltale game archives (.ttarch)
  Added support for Livemaker games via crass/crage (plugin)
  Added support for .aac audio files (decompress to wav) using faad (plugin)
  Added support for .flac audio files using flac
  Added support for FreeArc compressed archives (.arc) using FreeArc unpacker
  Added support for .mpq archives using MPQ Plugin for Total Commander (plugin)
  Added support for .sfArk files using sfarkxtc
  Added filescan with MediaInfo dll to provide additional information on media files (scan only mode)
  Added delay to update script to prevent 'not found' error, changed execution parameter
  Added 'Open program directory' help menu entry
  Added file metadata (filesize, creation date,...) to log file when 'Ask for feedback' is enabled
  Added timeout exit message
  Added additional weblinks to help menu
  Added option to disable video track extraction
  Added support for Windows 10
  Added explaining tooltips to some options
  Added option to always keep GUI in foreground
  Added tooltips to batch queue view
  Added support for password list for .rar archives
  Fixed after update behaviour when other versions of UniExtract are installed
  Fixed last update date not beeing saved when an update was found
  Fixed AutoIt error message in first start GUI when no language file was found, now exits with error code 99
  Fixed possible infinite loop in run function when helper binary execution terminates too fast, resulting in UniExtract not 
        shutting down after successful extraction
  Fixed BMS scripts were not checked if GAUP detected files, but was unable to extract them
  Fixed game archive detection if file extension is not lower case
  Fixed detection of Matroska files, extraction of ogg and webm tracks in video files
  Fixed context menu GUI: alluser checkboxes not clickable despite having admin rights
  Fixed video extraction: multiple audio/video tracks had same names when extracted, so FFMPEG always asked to overwrite, 
        now type(audio/video) and number of track for each type is added as well as the track's language
  Fixed folder size calculation in status box did not work correctly for FFMPEG and probably others
  Fixed moving unicode tempfiles to output directory created subdirectory with temporary name
  Fixed feedback success evaluation
  Fixed some terms not using translation files
  Fixed NSIS extraction overwriting existing files; UniExtract still creates not useful output files for some custom NSIS installers
		but all content is now kept in output directory
  Fixed occasionally high CPU load when reading console output
  Fixed tray exit handler not terminating all helper binaries
  Fixed FFMPEG updater
  Fixed swf: extraction of .jpg files; performance slightly increased
  Fixed GameSelect GUI: not a game message is now always the first element and preselected
  Fixed unicode files are changed to ???????? and therefore fail to extract when adding them to batch queue
  Fixed unicode files' extraction to subdir folder name
  Fixed rar extraction returning success if there was a write error or access denied message
  Fixed slowdown when extracting to drive root directory caused by size calculation
  Fixed /prefs command line parameter not working
  Fixed help screen closing after 15 seconds when opened from command line
  Fixed some untranslated terms
  Fixed rounding issues in free space check when using batch mode
  Changed percentage indicator detection to include float percentage values
  Changed percentage indicator detection to include pattern x/y
  Changed user input needed message should be more visible now
  Changed check for update behaviour: check is only performed on start if GUI is opened; if run from command line or context menu,
		  it will be done right before terminating, so extraction/scan will not abort after installing update
  Changed internal behaviour for extraction and game select functions
  Changed language files, added new %name term to reduce %s usage
  Changed FFMPEG is now downloaded to the correct subdirectory (x86/x64), so the appropriate version is used in portable mode on 
		  different operating systems
  Changed feedback GUI now displays privacy agreement before sending	
  Changed after update behaviour, most recent changelog is now opened
  Changed translation files, removed %s variables and introduced numbered placeholders, that can be switched to 
		  fit a language's word order; added %name shortcut
  Changed unicode files are now renamed instead of moving them to a temporary directory if possible
  Changed inno setup extraction to rename ',1' files to avoid extracted programs not finding some files
  Changed GUI design on Windows 10 systems to fit standard window style
  Changed multiple part rar files are now added only once to batch queue, so it is possible to drag and drop 
		  all rar files onto UniExtract without having to deal with 'file exists' prompts
  Disabled directory size calculation when extracting to drive to prevent significant slow down
  Removed 64 bit iso.wcx plugin as it does not work correctly with QuickBMS
  Replaced booz with unzoo (adds support for 64 bit systems, longer filenames, logging)
  Replaced tee with mtee (adds support for unicode and longer filenames, smaller)
  Replaced tee with wintee (Windows 10 only, due to mtee not terminating fast enough)
  Updated AutoIt to 3.3.14.1
  Updated unrar to 5.21
  Updated fsbextract to 0.3.4a
  Updated exeinfo PE to 0.0.3.8
  Updated disunity to 0.3.4
  Updated quickbms to 0.6.5
  Updated innounp to 0.43
  Updated language files, added new terms to all language files, set encoding to UTF-16, updated translation info text,
		  changed %s to %name and %1, %2,...

Alpha 4:
  Added scroll bar to feedback edit controls
  Added view/edit batch queue GUI
  Added option to change path of filescan.txt (batch mode filescan log file)
  Added /batch command line parameter to add a file to the batch queue without processing it
  Added /clear command line parameter to clear batch queue and disable batch mode
  Added unicodecheck option to preferences GUI
  Added option for manual status box positioning to ini file
  Added plugin GUI
  Changed NO_FREE_SPACE message: file sizes are now rounded
  Fixed deactivate batch mode on tray exit
  Fixed disabled logging for 'silent exits'
  Fixed automatically adding a file to batch mode by singleton logic resulted in an endless loop opening and closing UniExtract 
		until main instance finished work
  Fixed changes in the batch file when UniExtract is running were completely ignored until the process restarted
  Fixed ctrl+a did not work on edit controls due to Windows API bug
  Fixed filescan.txt should now be deleted correctly before starting new batch mode
  Fixed batch mode not starting when clicking OK on main GUI
  Fixed unicode check displaying message box in silent mode
  Fixed batch file not beeing closed when clicked on 'No' on duplicate message box
  Fixed automatic status box positioning with non-standard task bar (e.g. task bar on top of screen)
  Updated QuickBMS to 0.6
  

Alpha 3:
  Added delay before checking for renamed file after tridscan
  Added no update available message box
  Added warning before changing file associations
  Added option to disable unicode check
  Added 1024 bytes hex dump of input file when user decides to open feedback GUI via prompt
  Fixed RENAME_NOTFOUND message contained '&' special character
  Fixed possible update check failure when ini file does not contain a lastupdate value
  Fixed batch queue file was created in working dir when using relative paths
  Changed main gui, changing between scan and extraction mode is much easier now
  Changed after update behaviour: now opening minor changelog instead of overall changelog
  Changed after update behaviour: new options are now added to ini file (useful for options without corresponding GUI control)
  Updated Exeinfo PE to 0.0.3.6
  
  
Alpha 2.1:
  Added minor changelog
  Fixed cascading context menu
  
  
Notes:
  Some features are not yet available in development versions; they will be added during beta test.
	- Some extractions are already supported, but the filetype is only recognized with custom trid definitions.
	  These will be added as soon as the stable version is ready to be released.
	
	
	
	
	